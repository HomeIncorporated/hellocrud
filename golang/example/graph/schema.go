// Code generated by SQLBoiler (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package graph

import (
	"strings"

	graphql "github.com/graph-gophers/graphql-go"
)

// Schema is the GraphQL schema
var Schema string

// schemaRoot is the GraphQL root schema containing query and mutation resolvers
var schemaRoot = `
scalar Time
scalar Int64

schema {
  query: Query
  mutation: Mutation
}

type Query {


  searchComments(
    sinceID: ID
    pageNumber: Int
    pageSize: Int
    input: SearchCommentInput
  ): CommentsCollection!

  commentByID(
    id: ID!
  ): Comment!


  searchPosts(
    sinceID: ID
    pageNumber: Int
    pageSize: Int
    input: SearchPostInput
  ): PostsCollection!

  postByID(
    id: ID!
  ): Post!

}

type Mutation {


  createComment(
    input: CreateCommentInput!
  ): Comment!

  updateCommentByID(
    id: ID!
    input: UpdateCommentInput!
  ): Comment!

  deleteCommentByID(
    id: ID!
  ): Comment!


  createPost(
    input: CreatePostInput!
  ): Post!

  updatePostByID(
    id: ID!
    input: UpdatePostInput!
  ): Post!

  deletePostByID(
    id: ID!
  ): Post!

}
`

func init() {
	strs := []string{
		schemaRoot,
		SchemaTypeComment,
		SchemaCreateCommentInput,
		SchemaUpdateCommentInput,
		SchemaSearchCommentInput,
		SchemaTypePost,
		SchemaCreatePostInput,
		SchemaUpdatePostInput,
		SchemaSearchPostInput,
	}
	Schema = strings.Join(strs, "\n")

	// Sanity check generated schema
	graphql.MustParseSchema(Schema, &Resolver{})
}
