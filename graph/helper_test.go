// Code generated by SQLBoiler (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package graph

import (
	"strconv"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
)

func strptr(s string) *string {
	return &s
}

func bool2ptr(b bool) *bool {
	return &b
}

func base64ptr(b Base64) *Base64 {
	return &b
}

func floatptr(f float) *float {
	return &f
}

func intptr(i int) *int {
	return &i
}

func int64ptr(i int64) *int64 {
	return &i
}

func textptr(t Text) *Text {
	return &t
}

func timeptr(t time.Time) *time.Time {
	return &t
}

func TestQueryModSearch(t *testing.T) {
	testCases := []struct {
		givenInput          interface{}
		expectResultsLength int
	}{

		{
			givenInput:          (*searchCommentInput)(nil),
			expectResultsLength: 0,
		},
		{
			givenInput: &searchCommentInput{

				id:     42,
				postID: 42,
				author: "lorem ipsum",
				body:   "lorem ipsum",
				notes:  strptr("lorem ipsum"),
			},
			expectResultsLength: 0,
		},

		{
			givenInput:          (*searchPostInput)(nil),
			expectResultsLength: 0,
		},
		{
			givenInput: &searchPostInput{

				id:     42,
				title:  "lorem ipsum",
				author: "lorem ipsum",
				body:   "lorem ipsum",
				notes:  strptr("lorem ipsum"),
			},
			expectResultsLength: 0,
		},
	}

	for i, tc := range testCases {
		t.Run(strconv.Itoa(i), func(t *testing.T) {
			result := QueryModSearch(tc.givenInput)
			assert.Len(t, result, tc.expectResultsLength)
		})
	}
}
