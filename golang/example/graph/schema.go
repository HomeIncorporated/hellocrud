// Code generated by SQLBoiler (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package graph

import graphql "github.com/graph-gophers/graphql-go"

var Schema = `

schema {
  query: Query
  mutation: Mutation
}
scalar Time

type Query {


  allComments(
    since: ID
    pageSize: Int!
  ): CommentsCollection!

  commentByID(
    id: ID!
  ): Comment!


  allPosts(
    since: ID
    pageSize: Int!
  ): PostsCollection!

  postByID(
    id: ID!
  ): Post!

}

type Mutation {


  createComment(
    input: CreateCommentInput!
  ): Comment!

  updateCommentByID(
    id: ID!
    input: UpdateCommentInput!
  ): Comment!

  deleteCommentByID(
    id: ID!
  ): Comment!


  createPost(
    input: CreatePostInput!
  ): Post!

  updatePostByID(
    id: ID!
    input: UpdatePostInput!
  ): Post!

  deletePostByID(
    id: ID!
  ): Post!

}

type Comment {
	
		# Convenient guid for react component @key attribute
		rowId: String!
		id: ID!
		postID: Int!
		author: String!
		body: String!
		notes: String
		createdAt: Time
		updatedAt: Time
}

type CommentsCollection {
	nodes: [Comment!]!
}

input CreateCommentInput {
	
	  postID: Int!
	  author: String!
	  body: String!
	  notes: String
	  updatedAt: Time
}

input UpdateCommentInput {
	
	  postID: Int!
	  author: String!
	  body: String!
	  notes: String
	  updatedAt: Time
}

type Post {
	
		# Convenient guid for react component @key attribute
		rowId: String!
		id: ID!
		title: String!
		author: String!
		body: String!
		notes: String
		createdAt: Time
		updatedAt: Time
}

type PostsCollection {
	nodes: [Post!]!
}

input CreatePostInput {
	
	  title: String!
	  author: String!
	  body: String!
	  notes: String
	  updatedAt: Time
}

input UpdatePostInput {
	
	  title: String!
	  author: String!
	  body: String!
	  notes: String
	  updatedAt: Time
}


`

var _ = graphql.MustParseSchema(Schema, &Resolver{})
